import os
import asyncio
import logging
from dotenv import load_dotenv
from telethon import TelegramClient, events
from telethon.sessions import StringSession
import nest_asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(message)s")
log = logging.getLogger("relay-bot")

# –†–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞
nest_asyncio.apply()
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
STRING_SESSION = os.getenv("STRING_SESSION")
TARGET_CHAT_ID = int(os.getenv("TARGET_CHAT_ID"))
SOURCE_CHAT_ID_RAW = os.getenv("SOURCE_CHAT_ID")

# Telegram –∫–ª–∏–µ–Ω—Ç
client = TelegramClient(StringSession(STRING_SESSION), API_ID, API_HASH)

async def main():
    await client.start()
    log.info("‚úÖ –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω")

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å @username
    source_entity = await client.get_entity(SOURCE_CHAT_ID_RAW)
    log.info(f"üì° SOURCE_CHAT_ID entity –ø–æ–ª—É—á–µ–Ω: {source_entity.id}")

    # –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
    @client.on(events.NewMessage(chats=source_entity))
    async def handler(event):
        text = event.message.message
        if text:
            log.info(f"üì• –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text[:80]}...")
            await client.send_message(TARGET_CHAT_ID, text)
            log.info(f"üì§ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ {TARGET_CHAT_ID}")

    log.info("üü¢ –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫
loop = asyncio.get_event_loop()
loop.run_until_complete(main())
