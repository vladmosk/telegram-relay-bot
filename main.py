import asyncio
import os
from dotenv import load_dotenv
from telethon import TelegramClient, events
from telethon.sessions import StringSession
import nest_asyncio
import logging

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–≥–µ—Ä
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
log = logging.getLogger("relay-bot")


# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Jupyter)
nest_asyncio.apply()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ .env
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
STRING_SESSION = os.getenv("STRING_SESSION")
SOURCE_CHAT = os.getenv("SOURCE_CHAT")  # @–∫–∞–Ω–∞–ª –∏–ª–∏ ID
TARGET_CHAT_ID = int(os.getenv("TARGET_CHAT_ID"))

# –ö–ª–∏–µ–Ω—Ç —á–µ—Ä–µ–∑ StringSession
client = TelegramClient(StringSession(STRING_SESSION), API_ID, API_HASH)

CATEGORIES = {
    "411 üè°": [
        '411', '–¥–∞—á–∞ –ö–æ–≤–∞–ª–µ–≤—Å–∫–æ–≥–æ', '–ª—é—Å—Ç–¥–æ—Ä—Ñ—Å–∫–∞—è', '–ì–ª—É—à–∫–æ', '–∞–∫–≤–∞—Ä–µ–ª—å 2', '2 –∞–∫–≤–∞—Ä–µ–ª—å',
        '—á–µ—Ä–Ω–æ–º–æ—Ä–∫–∞', '–í–∏–ª—å—è–º—Å–∞', '—Ç–∞–∏—Ä–æ–≤–∞', '–∏–ª—å—Ñ–∞ –∏ –ø–µ—Ç—Ä–æ–≤–∞', '—Å–∏—Ç–∏—Ü–µ–Ω—Ç—Ä', '—Å–∏—Ç–∏ —Ü–µ–Ω—Ç—Ä', '–∫–æ—Ä–æ–ª–µ–≤–∞'
    ],
    "–†—ã–±–∞–ª–∫–∞ üé£ —á–µ—Ä–µ–∑ 2 —Å—Ç–æ–ª–±–∞": [
        '–º–∞—è–∫–∏', '–¥–≤–∞ —Å—Ç–æ–ª–±–∞', '2 —Å—Ç–æ–ª–±–∞', '–∞–≤–∞–Ω–≥–∞—Ä–¥', '—Å—É—Ö–æ–π –ª–∏–º–∞–Ω', '–¥–∞–ª—å–Ω–∏–∫',
        '—Ö–ª–µ–±–æ–¥–∞—Ä—Å–∫–æ–µ', '—Ä–∞—Å—Å–µ–ª–µ–Ω–µ—Ü', '–º–∏—Ä–Ω–æ–µ', '–±–µ–ª—è–µ–≤–∫–∞'
    ],
    "–†—ã–±–∞–ª–∫–∞ üé£ –ø–µ—Ç—Ä–æ–¥–æ–ª–∏–Ω–∞": [
        '–ø–µ—Ä–µ–ø—Ä–∞–≤–∞', '–±–∞—Ä–∞–±–æ–π', '–º–∞–ª–æ–¥–æ–ª–∏–Ω—Å–∫–æ–µ', '–≤–µ–ª–∏–∫–æ–¥–æ–ª–∏–Ω—Å–∫–æ–µ', '–º–∞–ª–∞—è –¥–æ–ª–∏–Ω–∞', '–ø—Ä–∏–ª–∏–º–∞–Ω—Å–∫–æ–µ',
        '–Ω–æ–≤–∞—è –¥–æ–ª–∏–Ω–∞', '–¥–æ–±—Ä–æ–∞–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∫–∞', '–Ω–æ–≤–æ–≥–æ—Ä–æ–¥–∫–æ–≤–∫–∞', '–º–∞—Ä—å—è–Ω–æ–≤–∫–∞', '–π–æ—Å–∏–ø–æ–≤–∫–∞',
        '–ø–µ—Ç—Ä–æ–¥–æ–ª–∏–Ω—Å–∫–æ–µ', '–ø–µ—Ç—Ä–æ–¥–æ–ª–∏–Ω–∞'
    ],
    "üö® –í–Ω–∏–º–∞–Ω–∏–µ!": [
        '–º–µ–Ω—Ç—ã', '—Ç–æ—Ä–º–æ–∑—è—Ç', '–ø–ª–∞–Ω—à–µ—Ç', '–±–µ–ª—è–µ–≤–∫–∞', '–ª—é—Å—Ç—Ä–∞', '–ª—é—Å—Ç—Ä–µ', '–±–ø', '–±–ª–æ–∫–ø–æ—Å—Ç',
        '–±–ª–æ–∫-–ø–æ—Å—Ç', '–ª–µ–¥–µ–Ω—Ü–∏', '–ª–µ–¥–µ–Ω—Ü—ã', '–ª–µ–¥–µ–Ω–µ—Ü'
    ],
    "üå≥ –¶–µ–Ω—Ç—Ä –∏ –ø–∞—Ä–∫–∏": [
        '—Ñ–æ–Ω—Ç–∞–Ω', '—Ñ–∞–Ω—Ç–∞–Ω', '–≥–æ—Ä—å–∫–æ–≥–æ', '—Ç–∞–ª–±—É—Ö–∏–Ω–∞', '—Ç–æ–ª–±—É—Ö–∏–Ω–∞', '–ø–∞—Ä–∫ –ø–æ–±–µ–¥—ã'
    ],
    "–ñ–î üöâ": [
        '–∂–¥'
    ]
}


def detect_category(text: str) -> str:
    text_lower = text.lower()
    for category, keywords in CATEGORIES.items():
        for keyword in keywords:
            if keyword in text_lower:
                return category
    return "üîî –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"

# –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
async def main():
    log.info("üöÄ –ó–∞–ø—É—Å–∫ main()...")
    await client.start()
    log.info("üì° –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –∫–∞–Ω–∞–ª...")

    @client.on(events.NewMessage(chats=SOURCE_CHAT))
    async def handler(event):
        text = event.message.message
        if text:
            prefix = detect_category(text)
            final_message = f"{prefix}:\n\n{text}"
            await client.send_message(TARGET_CHAT_ID, final_message)

    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫
asyncio.run(main())
