import os
import logging
import asyncio
from dotenv import load_dotenv
from telethon import TelegramClient, events
from telethon.sessions import StringSession
import nest_asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
log = logging.getLogger("relay-bot")

# –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ event loop
nest_asyncio.apply()
load_dotenv()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_ID = int(os.getenv("API_ID"))
API_HASH = os.getenv("API_HASH")
STRING_SESSION = os.getenv("STRING_SESSION")
TARGET_CHAT_ID = int(os.getenv("TARGET_CHAT_ID"))

# –ñ—ë—Å—Ç–∫–æ —É–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π –∫–∞–Ω–∞–ª: –¢–û–¢ –°–ê–ú–´–ô ‚Äî –¢–û–ü–û–í–•–ï–õ–ü
SOURCE_CHANNEL_ID = -1002050105527

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient(StringSession(STRING_SESSION), API_ID, API_HASH)

async def setup():
    await client.start()
    log.info("‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    log.info(f"üì° –°–ª—É—à–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª ID: {SOURCE_CHANNEL_ID}")
    log.info("üü¢ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–∂–∏–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è...")

    @client.on(events.NewMessage)
    async def handler(event):
        if event.chat_id != SOURCE_CHANNEL_ID:
            return  # –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å—ë, –∫—Ä–æ–º–µ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞

        text = event.message.message
        if text:
            log.info(f"üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {text[:80]}")
            await client.send_message(TARGET_CHAT_ID, text)
            log.info(f"üì§ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ {TARGET_CHAT_ID}")

    await client.run_until_disconnected()

# –ó–∞–ø—É—Å–∫
loop = asyncio.get_event_loop()
loop.run_until_complete(setup())
